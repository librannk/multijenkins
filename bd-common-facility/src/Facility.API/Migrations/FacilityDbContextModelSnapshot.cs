// <auto-generated />
using System;
using Facility.API.Infrastructure.DataAccess.SQL.DBContextEntities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Facility.API.Migrations
{
    [DbContext(typeof(FacilityDbContext))]
    partial class FacilityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Facility.API.Infrastructure.DataAccess.SQL.DBContextEntities.Entities.ControlledSubstanceLicenseEntity", b =>
                {
                    b.Property<Guid>("ControlledSubstanceLicenseKey");

                    b.Property<string>("CityName")
                        .HasMaxLength(50);

                    b.Property<string>("CountryName")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedByActorKey");

                    b.Property<DateTimeOffset>("CreatedDateTime");

                    b.Property<bool>("ExternalFlag");

                    b.Property<string>("LastModifiedByActorKey");

                    b.Property<DateTimeOffset>("LastModifiedDateTime");

                    b.Property<string>("LicenseId")
                        .HasMaxLength(100);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.Property<string>("StreetAddressText")
                        .HasMaxLength(120);

                    b.Property<string>("SubdivisionName")
                        .HasMaxLength(50);

                    b.Property<Guid>("TenantKey");

                    b.HasKey("ControlledSubstanceLicenseKey");

                    b.ToTable("ControlledSubstanceLicenses","dbo");
                });

            modelBuilder.Entity("Facility.API.Infrastructure.DataAccess.SQL.DBContextEntities.Entities.ControlledSubstanceLicenseFacilityEntity", b =>
                {
                    b.Property<Guid>("ControlledSubstanceLicenseFacilityKey");

                    b.Property<Guid>("ControlledSubstanceLicenseKey");

                    b.Property<string>("CreatedByActorKey");

                    b.Property<DateTimeOffset>("CreatedDateTime");

                    b.Property<Guid>("FacilityKey");

                    b.Property<string>("LastModifiedByActorKey");

                    b.Property<DateTimeOffset>("LastModifiedDateTime");

                    b.Property<Guid>("TenantKey");

                    b.HasKey("ControlledSubstanceLicenseFacilityKey");

                    b.HasIndex("ControlledSubstanceLicenseKey");

                    b.HasIndex("FacilityKey");

                    b.ToTable("ControlledSubstanceLicenseFacilities","dbo");
                });

            modelBuilder.Entity("Facility.API.Infrastructure.DataAccess.SQL.DBContextEntities.Entities.FacilityEntity", b =>
                {
                    b.Property<Guid>("FacilityKey");

                    b.Property<bool>("ActiveFlag");

                    b.Property<string>("CityName")
                        .HasMaxLength(50);

                    b.Property<string>("CountryName")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedByActorKey");

                    b.Property<DateTimeOffset>("CreatedDateTime");

                    b.Property<string>("CustomerContactEmailAddressValue")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerContactFaxNumberText")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerContactName")
                        .HasMaxLength(50);

                    b.Property<string>("CustomerContactPhoneNumberText")
                        .HasMaxLength(50);

                    b.Property<string>("DescriptionText")
                        .HasMaxLength(100);

                    b.Property<string>("FacilityCode")
                        .HasMaxLength(20);

                    b.Property<string>("FacilityName")
                        .HasMaxLength(50);

                    b.Property<string>("LastModifiedByActorKey");

                    b.Property<DateTimeOffset>("LastModifiedDateTime");

                    b.Property<Guid>("PharmacyInformationSystemKey");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.Property<string>("RxLicenseId")
                        .HasMaxLength(20);

                    b.Property<string>("SiteId")
                        .HasMaxLength(50);

                    b.Property<string>("StreetAddress2Text")
                        .HasMaxLength(50);

                    b.Property<string>("StreetAddressText")
                        .HasMaxLength(120);

                    b.Property<string>("SubDivisionName")
                        .HasMaxLength(50);

                    b.Property<Guid?>("TenantKey");

                    b.Property<string>("TimeZoneId")
                        .HasColumnType("VARCHAR(64)");

                    b.HasKey("FacilityKey");

                    b.ToTable("Facilities","dbo");
                });

            modelBuilder.Entity("Facility.API.Infrastructure.DataAccess.SQL.DBContextEntities.Entities.ControlledSubstanceLicenseFacilityEntity", b =>
                {
                    b.HasOne("Facility.API.Infrastructure.DataAccess.SQL.DBContextEntities.Entities.ControlledSubstanceLicenseEntity", "ControlledSubstanceLicenseEntity")
                        .WithMany("ControlledSubstanceLicenseFacilities")
                        .HasForeignKey("ControlledSubstanceLicenseKey")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Facility.API.Infrastructure.DataAccess.SQL.DBContextEntities.Entities.FacilityEntity", "Facility")
                        .WithMany("ControlledSubstanceLicenseFacilities")
                        .HasForeignKey("FacilityKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
